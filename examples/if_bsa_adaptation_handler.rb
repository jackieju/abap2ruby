# Generated by Abap2Ruby(https://github.com/jackieju/abap2ruby)
require_relative "if_esf_lcp.rb"
require_relative "if_esf_types.rb"

module If_bsa_adaptation_handler

   # methods MAP_MESSAGES
   #     importing
   #       !IN_MESSAGES type IF_ESF_TYPES=>TY_MESSAGES
   #     exporting
   #       !OUT_MESSAGES type IF_ESF_TYPES=>TY_MESSAGES
   #     raising
   #       resumable(CX_BSA_RUNTIME) .
   #

   def map_messages(*_a,in_messages:nil,_i:nil,_e:nil,_b:nil)


      raise "Not implemented"

   end
   # methods MAP_CHANGE_NOTIFICATIONS
   #     importing
   #       !IN_CHANGE_NOTIFICATIONS type IF_ESF_TYPES=>TY_CHANGE_NOTIFICATIONS
   #     exporting
   #       !OUT_CHANGE_NOTIFICATIONS type IF_ESF_TYPES=>TY_CHANGE_NOTIFICATIONS
   #     raising
   #       CX_BSA_RUNTIME .
   #

   def map_change_notifications(*_a,in_change_notifications:nil,_i:nil,_e:nil,_b:nil)


      raise "Not implemented"

   end
   # methods ON_BO_CHANGED
   #     importing
   #       !IN_PUBLISHER_BO_NAME type STRING
   #       !IN_BO_CHANGES type IF_ESF_TYPES=>TY_CHANGE_NOTIFICATIONS
   #     exporting
   #       !OUT_CHANGE_NOTIFICATIONS type IF_ESF_TYPES=>TY_CHANGE_NOTIFICATIONS
   #     raising
   #       CX_ESF_CORE_SERVICE .
   #

   def on_bo_changed(*_a,in_publisher_bo_name:nil,in_bo_changes:nil,_i:nil,_e:nil,_b:nil)


      raise "Not implemented"

   end
   # methods GET_LCP
   #     importing
   #       !IN_BO_NAME type STRING
   #       !IN_BUFFERING_MODE type TY_BUFFERING_MODE default CO_BUFFERING_MODE-UNSPECIFIED
   #     returning
   #       value(OUT_LCP) type ref to IF_ESF_LCP
   #     raising
   #       CX_BSA_RUNTIME .
   #

   def get_lcp(*_a,in_bo_name:nil,in_buffering_mode:nil,_i:nil,_e:nil,_b:nil)


      raise "Not implemented"

   end
   # methods PUSH_RUNTIME_BUFFER_USAGE
   #     importing
   #       !IV_BO_NAME type STRING
   #       !IV_BO_NODE_NAME type STRING
   #       !IT_USED_ATTRIBUTES type SESF_STRING_TAB optional
   #       !IT_USED_ACTIONS type SESF_STRING_TAB optional .
   #

   def push_runtime_buffer_usage(*_a,iv_bo_name:nil,iv_bo_node_name:nil,it_used_attributes:nil,it_used_actions:nil,_i:nil,_e:nil,_b:nil)


      raise "Not implemented"

   end
   # methods GET_FIRST_RETRVED_ROOT_NODE_ID
   #     exporting
   #       !EV_FIRST_RET_DATA_ROOT_NODE_ID type SESF_BO_NODE_ID
   #       !EV_FIRST_ROOT_ID_DETERMINED type BOOLEAN .

   def get_first_retrved_root_node_id(*_a,_i:nil,_e:nil,_b:nil)


      raise "Not implemented"

   end

   module_function
   if_bsa_adaptation_handler=If_bsa_adaptation_handler
   include If_esf_lcp
   module Co_buffering_mode
      module_function
      Unspecified = '?'
      def unspecified;'?';  end
      Buffered = 'B'
      def buffered;'B';  end
      Unbuffered = '-'
      def unbuffered;'-';  end
   end
   include If_esf_types

end
